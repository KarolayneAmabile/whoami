{{- if .Values.cronjob.enabled }}
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ .Values.cronjob.name }}-start
  namespace: operations
spec:
  schedule: "{{ .Values.cronjob.schedule }}"
  timeZone: "America/Sao_Paulo"
  jobTemplate:
    spec:
      template:
        spec:
          containers:
            - name: {{ .Values.cronjob.name }}
              image: {{ .Values.cronjob.image.repository }}:{{ .Values.cronjob.image.tag | default .Chart.AppVersion }}
              imagePullPolicy: {{ .Values.image.pullPolicy }}
              resources:
                limits:
                  cpu: {{ .Values.cronjob.resources.limits.cpu }}
                  memory: {{ .Values.cronjob.resources.limits.memory }}
                requests:
                  cpu: {{ .Values.cronjob.resources.requests.cpu }}
                  memory: {{ .Values.cronjob.resources.requests.memory }}
              command: ["/bin/sh", "-c", "argocd app set {{ .Values.cronjob.name }} -p replicaCount=1 --insecure && argocd app sync {{ .Values.cronjob.name }} --insecure"]
              env:
                - name: ARGOCD_SERVER
                  value: {{ .Values.cronjob.argocdServer }}
                - name: ARGOCD_INSECURE
                  value: "true"
                - name: ARGOCD_AUTH_TOKEN
                  valueFrom:
                    secretKeyRef:
                      name: {{ .Values.cronjob.argocdAuthTokenSecret }}
                      key: token
          {{- with .Values.imagePullSecrets }}
          imagePullSecrets:
            {{- toYaml . | nindent 10 }}
          {{- end }}
          restartPolicy: OnFailure
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ .Values.cronjob.name }}-stop
  namespace: operations
spec:
  schedule: "{{ .Values.cronjob.stopSchedule }}"
  timeZone: "America/Sao_Paulo"
  jobTemplate:
    spec:
      template:
        spec:
          containers:
            - name: {{ .Values.cronjob.name }}
              image: {{ .Values.cronjob.image.repository }}:{{ .Values.cronjob.image.tag | default .Chart.AppVersion }}
              imagePullPolicy: {{ .Values.image.pullPolicy }}
              resources:
                limits:
                  cpu: {{ .Values.cronjob.resources.limits.cpu }}
                  memory: {{ .Values.cronjob.resources.limits.memory }}
                requests:
                  cpu: {{ .Values.cronjob.resources.requests.cpu }}
                  memory: {{ .Values.cronjob.resources.requests.memory }}
              command: ["/bin/sh", "-c", "argocd app set {{ .Values.cronjob.name }} -p replicaCount=0 --insecure && argocd app sync {{ .Values.cronjob.name }} --insecure"]
              env:
                - name: ARGOCD_SERVER
                  value: {{ .Values.cronjob.argocdServer }}
                - name: ARGOCD_INSECURE
                  value: "true"
                - name: ARGOCD_AUTH_TOKEN
                  valueFrom:
                    secretKeyRef:
                      name: {{ .Values.cronjob.argocdAuthTokenSecret }}
                      key: token
          {{- with .Values.imagePullSecrets }}
          imagePullSecrets:
            {{- toYaml . | nindent 10 }}
          {{- end }}
          restartPolicy: OnFailure
{{- end }} 